#include <iostream>

struct Node {
	int info;
	struct Node *link;
	
} *start;

// TODO
void createlist(int data);
void addBegin(int data);
void addEnd(int data);
void deleteBegin();
void deleteEnd();
void display();

int main()
{
	int choice, n, element, i;
	
	while(1) {
		std::cout << "1 - Create a Link List\n"
				  << "2 - Add at the Beginning \n"
				  << "3 - Add at the End \n"
				  << "4 - Delete at the Beginning\n"
				  << "5 - Delete at the End\n"
				  << "6 - Display\n\n";
		
		std::cout << "Enter your choice : ";
		std::cin >> choice;
		
		switch(choice) 
		{
			case 1:
				std::cout << "How many nodes do you want? ";
				std::cin >> n;
				
				for (i = 0; i < n; i++) {
					std::cout << "Enter the elements: ";
					std::cin >> element;
					// TODO 
					createlist(element);
				}
				break;
			
			case 2:
				std::cout << "Enter Value : ";
				std::cin >> element; 
				addBegin(element);
				break;
			
			case 3:
				std::cout << "Enter Value : ";
				std::cin >> element;
				addEnd(element);
				break;
			
			case 4: 
				std::cout << "Deleting Head\n";
				deleteBegin();
				break;
			
			case 5:
				std::cout << "Deleting Tail\n";
				deleteEnd();
				break;
			
			case 6 :
				display();
				break;
		}
	}
}

void createlist (int data)
{
	struct Node *q, *tmp;
	tmp = new Node;
	tmp->info = data;
	tmp->link = NULL;
	
	if (start == NULL)
		start = tmp;
	else {
		q = start;
		while (q -> link != NULL)
			q  = q->link;
		
		q->link = tmp; 
	}
}

void addBegin(int data)
{
	Node *q, *tmp;
	tmp = new Node;
	tmp->info = data;
	
	tmp->link = start;
	start = tmp;
}

void addEnd(int data)
{
	Node *q, *tmp; 
	tmp = new Node;
	tmp->info = data;
	tmp->link = NULL; 
	
	if (start != NULL) {
		q = start;
		
		while (q->link != NULL) 
			q = q->link;
		
		q ->link = tmp;
	}
}

void deleteBegin()
{
	struct Node *q, *tmp;
	tmp = start;
	start = start->link;
	delete tmp; 
}

void deleteEnd()
{
	// declaring current node , previous node
	Node *q, *p;
	
	q = start;
	if (start != NULL) {
		while (q->link != NULL) {
			p = q;
			q = q->link;
		}
		delete q;
		p->link = NULL;
	}
} 

void display()
{
	struct Node *q;
	
	if (start == NULL) {
		std::cout << "It's Empty!" << std::endl;
		return ;
	}
	
	else
		q = start;
	
	std::cout << "Elements in the Linked List : \n";
	while (q != NULL) {
		std::cout << q->info << ' ';
		q = q->link;
	}
	
	std::cout << std::endl;
}

