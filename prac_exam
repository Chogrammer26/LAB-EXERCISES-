#include <iostream>
#include <cstdlib>
#include <ctime>

void display_menu();
void display_board(const char board[][4]);
void fill_secret_board(int secret_board[][4], int pairs[8]);
void gen_pair(int pairs[8]);
bool is_finished();


int main()
{
  int attempts;
  char board[4][4] = {
    '-','-','-','-',
    '-','-','-','-',
    '-','-','-','-',
    '-','-','-','-',
    };
    
  int pairs[16] = {0};
  int secret_board[2][4]; 
  
  display_board(board);
  std::cout << '\n';
  gen_pair(pairs);
  for (int i = 0; i < 8; i += 2) 
    std::cout << pairs[i] << ' ' << pairs[i+1] << '\n';
  
  std::cout << '\n';
  fill_secret_board(secret_board, pairs);
  for (int i = 0; i < 2; i++) {
    for (int j = 0; j < 4; j++) {
      std::cout << secret_board[i][j] << ' ';
    }
    std::cout << '\n';
  } 
}

void display_menu()
{

}

void display_board(const char board[][4])
{
  for (int row = 0; row < 4; row++) {
    std::cout << "+---++---++---++---+\n";
    for (int col = 0; col < 4; col++)
      std::cout << "| " << board[row][col] << " |";
    std::cout << '\n';
  }
  std::cout << "+---++---++---++---+";
}

void fill_secret_board(int secret_board[2][4],int pairs[8])
{  
  srand(time(NULL));
  //for (int i = 0; i < 2; i++) {
    //for (int j = 0; j < 4; j++) {
      //secret_board[i][j] = pairs[rand() * 7];
   // }
  //} 
  
}

void gen_pair(int pairs[8])
{
  srand(time(NULL));  
  int rnd_num;
  
  bool is_same = false;
  
  for (int i = 0; i < 8; i+= 2) {
    rnd_num = (rand() % 8) + 1;
    for (int j = 0; j < 8; j++) {
      if (rnd_num == pairs[j]) {
        rnd_num = rand() % 8 + 1;
        break;
        }
      }
   
      pairs[i] = rnd_num;
      pairs[i+1] = rnd_num; 
    }
    
  
}   

 
